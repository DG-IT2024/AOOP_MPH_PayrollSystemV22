import java.time.LocalTime;
import javax.swing.*;  
import javax.swing.table.DefaultTableModel;
import java.util.*; // Importing the Date Class from the util package 
import java.text.*; //Importing the SimpleDateFormat Class from the text package 


public class TimeSheet extends javax.swing.JFrame {

    /**
     * Creates new form TimeSheet
     */
    public TimeSheet() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txt_employeeName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_TimeIN = new javax.swing.JTextField();
        txt_TimeOUT = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btn_add = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txt_date = new javax.swing.JTextField();
        btn_delete = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_workedHour = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Employee Name");

        txt_employeeName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_employeeNameActionPerformed(evt);
            }
        });

        jLabel2.setText("Time In");

        txt_TimeIN.setText("HH:MM");

        txt_TimeOUT.setText("HH:MM");
        txt_TimeOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_TimeOUTActionPerformed(evt);
            }
        });

        jLabel3.setText("Time Out");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time In ", "Tme Out", "Worked Hours", "Tardiness", "Overtime"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        btn_add.setText("ADD");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_clear.setText("CLEAR");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        jLabel4.setText("Date");

        txt_date.setText("DD/MM/YY");
        txt_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_dateActionPerformed(evt);
            }
        });

        btn_delete.setText("DELETE");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_update.setText("UPDATE");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        jLabel5.setText("Worked Hour");

        txt_workedHour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_workedHourActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_TimeIN, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_TimeOUT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_employeeName)
                                    .addComponent(txt_date, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 114, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_update)
                            .addComponent(btn_add))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_clear)
                            .addComponent(btn_delete))
                        .addGap(35, 35, 35)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txt_workedHour, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt_employeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_TimeIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_TimeOUT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_add)
                            .addComponent(btn_clear))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_update)
                            .addComponent(btn_delete)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_workedHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_employeeNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_employeeNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_employeeNameActionPerformed

    private void txt_TimeOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_TimeOUTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_TimeOUTActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
        
        String RecordedDate = txt_date.getText();
            // Dates to be parsed HH:MM:SS
        String TimeIn = txt_TimeIN.getText();
        String TimeOut = txt_TimeOUT.getText();
                
        // Split the input string by ":"
        String[] part1 = TimeIn.split(":");
        String[] part2 = TimeOut.split(":");
        
        // Convert the hour and minute parts to integers
        long hour1 = Integer.parseInt(part1[0]);
        long minute1 = Integer.parseInt(part1[1]);
        
        long hour2 = Integer.parseInt(part2[0]);
        long minute2 = Integer.parseInt(part2[1]);
        
        // Calculate the difference in minutes
        long totalMinutes1 = hour1 * 60 + minute1;
        long totalMinutes2 = hour2 * 60 + minute2;

        long workedMinutes = totalMinutes2 - totalMinutes1;
    
        // Handle cases where the difference is negative (TimeOut is earlier than TimeIn)
        if (workedMinutes < 0) {
         workedMinutes += 24 * 60; // Assuming a 24-hour time format
        }

        // Calculate the worked hours and minutes
        long workedHour = workedMinutes / 60;
        long workedMinute = workedMinutes % 60;
 
        String workedHour_ = workedHour + ":" + workedMinute;
        
        LocalTime targetTime = LocalTime.of(8, 11);
        
        // Parse the input time into a LocalTime object
        LocalTime parsedTime = LocalTime.parse(TimeIn);
        long Tardiness = 0;
        
        if (parsedTime.isAfter(targetTime)&& parsedTime.isBefore(LocalTime.of(18,00))){
            Tardiness = 1;
        }   
                
        String Tardiness_ = Long.toString(Tardiness);
                
        LocalTime OverTime = LocalTime.of(18, 0);
                
        long overTime = 0;
        /*
        if (parsedTime.isAfter(OverTime)){
            workedHour_= "0";
            overTime = 30;
        }
      
        */
        
        String overTime_ = Long.toString(overTime);
        
        
        if(txt_date.getText().equals("")||txt_TimeIN.getText().equals("")||txt_TimeOUT.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Please Enter All ");
        }else{
            String timeSheetData[]={txt_date.getText(),txt_TimeIN.getText(),txt_TimeOUT.getText(),workedHour_,Tardiness_,overTime_};
            //add string array data
            tblModel.addRow(timeSheetData); //row added
        }
        
        
        
      
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        txt_employeeName.setText("");
        txt_date.setText("");
        txt_TimeIN.setText("");
        txt_TimeOUT.setText("");
    }//GEN-LAST:event_btn_clearActionPerformed

    private void txt_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_dateActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
       DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
    
    if(jTable2.getSelectedRowCount()==1){
        tblModel.removeRow(jTable2.getSelectedRow());
    }else{
        JOptionPane.showMessageDialog(null,"Please select Single Row for Delete");
    }    
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
    DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
    if(jTable2.getSelectedRowCount()==1){
        String Sheet_date = txt_date.getText();
	String Sheet_timeIN = txt_TimeIN.getText();
	String Sheet_timeOUt = txt_TimeOUT.getText();
	
	//set update value on table row
        tblModel.setValueAt(Sheet_date,jTable2.getSelectedRow(),0);
	tblModel.setValueAt(Sheet_timeIN,jTable2.getSelectedRow(),1);
	tblModel.setValueAt(Sheet_timeOUt,jTable2.getSelectedRow(),2);
	
	//update message display
	JOptionPane.showMessageDialog(null,"Update Successfully");
    }else{
            if(jTable2.getRowCount()==0){
		JOptionPane.showMessageDialog(null, "Table is Empty");
            }else{
		JOptionPane.showMessageDialog(null, "Please select Single Row for Delete");
        }
    
    }
    
    }//GEN-LAST:event_btn_updateActionPerformed

    private void txt_workedHourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_workedHourActionPerformed
        
    }//GEN-LAST:event_txt_workedHourActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TimeSheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TimeSheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TimeSheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimeSheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TimeSheet().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txt_TimeIN;
    private javax.swing.JTextField txt_TimeOUT;
    private javax.swing.JTextField txt_date;
    private javax.swing.JTextField txt_employeeName;
    private javax.swing.JTextField txt_workedHour;
    // End of variables declaration//GEN-END:variables
}
